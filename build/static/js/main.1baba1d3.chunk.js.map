{"version":3,"sources":["constants/index.tsx","common/cookies.js","common/http.js","common/paramInspect.js","actions/index.tsx","components/ImageContent/ImageContent.tsx","components/UploadImages.tsx","components/ChooseImagesModal.tsx","components/EditModal/EditModal.tsx","pages/Main.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","App.tsx","reducers/index.tsx","store/index.tsx","serviceWorker.ts","index.tsx"],"names":["ADD_NUMBER","REDUCE_NUMBER","GET_TASL","getCookie","name","document","cookie","length","start","indexOf","concat","end","unescape","substring","baseUrl","http","get","repo","param","Promise","resolve","reject","axios","headers","token","params","then","response","status","data","message","error","setTimeout","window","location","href","catch","loginPost","post","paramInspect","key","addNumber","type","constants","payload","reduceNumber","addTask","url","task","image","dispatch","getTask","taskName","deleteItem","id","editItem","ImageContent","props","react","className","chooseImageUrl","onClick","chooseImage","src","client","OSS","region","accessKeyId","accessKeySecret","bucket","UploadToOss","file","put","UploadImages","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadOnChange","info","beforeUpload","reader","FileReader","readAsDataURL","onloadend","res","getImagesList","state","loading","imageUrl","uploadButton","icon","upload","listType","showUploadList","onChange","alt","React","ChooseImagesModal","setState","imageList","list","item","chooseImagesCancel","chooseImagesConfirm","_this2","modal","title","visible","chooseImagesVisible","onOk","onCancel","map","index","components_ImageContent_ImageContent","components_UploadImages","EditModal","editName","editNameOnChange","value","openChooseImagesModal","editModalConfirm","editModalCancel","editModalVisible","row","col","span","input","e","target","components_ChooseImagesModal","confirm","Modal","HomeComponent","numberOnChange","number","searchNameOnChange","searchName","showDeleteConfirm","content","okText","okType","cancelText","handleOk","editId","changeName","handleCancel","showEditModal","record","changeNameOnChange","openUploadModal","openEditModal","global","columns","dataIndex","render","text","amount","es_button","style","width","table","rowKey","dataSource","components_EditModal_EditModal","connect","actions","LoginComponent","loginUserNameOnChange","loginUserName","loginPasswordOnChange","loginPassword","login","username","password","history","expiredays","exdate","Date","setDate","getDate","escape","toGMTString","setCookie","push","toRegister","placeholder","marginLeft","userNameOnChange","userName","passwordOnChange","register","success","toLogin","AppComponent","requireAuth","Layout","react_router","to","react_router_dom","path","exact","component","Main","Login","Register","initState","composeEnhancers","REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","reducer","combineReducers","arguments","undefined","action","objectSpread","Boolean","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","react_default","a","createElement","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1baba1d3.chunk.js","sourcesContent":["export const ADD_NUMBER = \"ADD_NUMBER\";\nexport const REDUCE_NUMBER = \"REDUCE_NUMBER\";\nexport const SET_NUMBER = \"SET_NUMBER\";\nexport const GET_TASL = \"GET_TASL\"\nexport const ADD_TASK = \"ADD_TASK\"\n","export function getCookie(name) {\n  if (document.cookie.length > 0) {\n    let start = document.cookie.indexOf(`${name}=`);\n    if (start !== -1) {\n      start = start + name.length + 1;\n      let end = document.cookie.indexOf(';', start);\n      if (end === -1) end = document.cookie.length;\n      return unescape(document.cookie.substring(start, end));\n    }\n  }\n  return '';\n}\n\nexport function setCookie(name, value, expiredays) {\n  const exdate = new Date();\n  exdate.setDate(exdate.getDate() + expiredays);\n  document.cookie = `${name}=${escape(value)}${(expiredays === null) ? '' : `;expires=${exdate.toGMTString()}`};path=/`;\n}\n\nexport function delCookie(name, value) {\n  const exdate = new Date();\n  exdate.setDate(exdate.getDate() - 1);\n  document.cookie = `${name}=${escape(value)};expires=${exdate.toGMTString()}};path=/`;\n}\n","import axios from \"axios\";\nimport { message } from \"antd\";\nimport { getCookie } from \"./cookies\";\n\nconst baseUrl = \"http://0.0.0.0:5000\";\n\nconst http = {\n  get(repo, param) {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(baseUrl + repo, {\n          headers: {\n            token: getCookie(\"TOKEN\")\n          },\n          params: param\n        })\n        .then(response => {\n          if (response.status === 200) {\n            switch (response.data.status) {\n              case 0:\n                resolve(response.data);\n                break;\n              case 2:\n                message.error(\"未登录\");\n                setTimeout(() => {\n                  window.location.href = \"/login\";\n                }, 2000);\n                break;\n              default:\n            }\n          }\n        })\n        .catch(error => {\n          return resolve(error);\n        });\n    });\n  },\n\n  loginPost(repo, param) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(baseUrl + repo, param)\n        .then(response => {\n          if (response.status === 200) {\n            resolve(response.data);\n          }\n        })\n        .catch(error => {\n          return resolve(error);\n        });\n    });\n  },\n\n  post(repo, param) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(baseUrl + repo, param, {\n          headers: {\n            token: getCookie(\"TOKEN\")\n          }\n        })\n        .then(response => {\n          if (response.status === 200) {\n            switch (response.data.status) {\n              case 0:\n                resolve(response.data);\n                break;\n              case 2:\n                message.error(\"未登录\");\n                setTimeout(() => {\n                  window.location.href = \"/login\";\n                }, 2000);\n                break;\n              default:\n            }\n          }\n        })\n        .catch(error => {\n          return resolve(error);\n        });\n    });\n  }\n};\n\nexport default http;\n","const paramInspect = (param) => {\n  for (let key in param) {\n    if (param[key] === \"\") {\n      delete param[key]\n    }\n  }\n  return param;\n}\n\nexport default paramInspect;\n","import * as constants from \"../constants\";\nimport { IAction } from \"../reducers/types\";\nimport { Dispatch } from \"redux\";\nimport http from \"../common/http\";\nimport paramInspect from \"../common/paramInspect\";\n\nexport function addNumber(): IAction {\n  return {\n    type: constants.ADD_NUMBER,\n    payload: \"\"\n  };\n}\n\nexport function reduceNumber(): IAction {\n  return {\n    type: constants.REDUCE_NUMBER,\n    payload: \"\"\n  };\n}\n\nexport function addTask(name:string,url:string): (dispatch: Dispatch) => void {\n  const param = {\n    task: name,\n    image: url\n  };\n\n  return (dispatch: Dispatch) => {\n    http.post(\"/test\", param).then(data => {\n      if (data.status === 0) {\n        dispatch<any>(getTask(\"\"));\n      }\n    });\n  };\n}\n\nexport function getTask(taskName: string): (dispatch: Dispatch) => void {\n  const param = {\n    task: taskName\n  };\n  return (dispatch: Dispatch) => {\n    http.get(\"/test\", param).then(data => {\n      if (data.status === 0) {\n        dispatch({\n          type: constants.GET_TASL,\n          payload: data.data\n        });\n      }\n    });\n  };\n}\n\nexport function deleteItem(id: number): (dispatch: Dispatch) => void {\n  const param = {\n    id: id\n  };\n  return (dispatch: Dispatch) => {\n    http.post(\"/test/delete\", param).then(data => {\n      if (data.status === 0) {\n        dispatch<any>(getTask(\"\"));\n      }\n    });\n  };\n}\n\nexport function editItem(\n  id: number,\n  name: string,\n  image: string\n): (dispatch: Dispatch) => void {\n  const param = {\n    id: id,\n    task: name,\n    image: image\n  };\n\n  return (dispatch: Dispatch) => {\n    http.post(\"/test/edit\", paramInspect(param)).then(data => {\n      if (data.status === 0) {\n        dispatch<any>(getTask(\"\"));\n      }\n    });\n  };\n}\n","import * as React from \"react\";\nimport \"./ImageContent.less\";\n\nexport interface IHomePageProps {\n  data: {\n    url?: string;\n    name?: string;\n  };\n  chooseImage?: () => void;\n  chooseImageUrl?: string;\n}\n\nconst ImageContent: React.SFC<IHomePageProps> = (props: IHomePageProps) => (\n  <div\n    className={`image-content ${\n      props.chooseImageUrl === props.data.url ? \"image-content-active\" : null\n    }`}\n    onClick={props.chooseImage}\n  >\n    <div className=\"image-box\">\n      <img className=\"box-image\" src={props.data.url} />\n    </div>\n    <div className=\"image-text\">{props.data.name}</div>\n  </div>\n);\n\nexport default ImageContent;\n","import * as React from \"react\";\nimport { Upload, Icon, message } from \"antd\";\nimport OSS from \"ali-oss\";\n\nexport interface IHomePageState {\n  loading: boolean;\n  imageUrl: string;\n}\n\nexport interface IHomePageProps {\n  getImagesList: () => void;\n}\n\nconst client = new OSS({\n  region: \"oss-ap-southeast-1\",\n  accessKeyId: \"LTAIEVSSmwrMsEkn\",\n  accessKeySecret: \"ZGHUz0XVhoWjK6KQ7JgALmBLtV5SSo\",\n  bucket: \"ts-img\"\n});\n\nconst UploadToOss = (file: any) => {\n  return new Promise((resolve, reject) => {\n    client\n      .put(file.name, file)\n      .then(data => {\n        resolve(data);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nclass UploadImages extends React.Component<IHomePageProps, IHomePageState> {\n  constructor(props: IHomePageProps) {\n    super(props);\n    this.state = {\n      loading: false,\n      imageUrl: \"\"\n    };\n  }\n\n  uploadOnChange = (info: any) => {};\n\n  beforeUpload = (file: any) => {\n    const isJPG = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJPG) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    } else {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        UploadToOss(file).then((data: any) => {\n          if (data.res.status) {\n            this.props.getImagesList();\n          }\n        });\n      };\n    }\n    return false;\n  };\n\n  render() {\n    const { imageUrl } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? \"loading\" : \"plus\"} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <Upload\n        name=\"avatar\"\n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        beforeUpload={this.beforeUpload}\n        onChange={this.uploadOnChange}\n      >\n        {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : uploadButton}\n      </Upload>\n    );\n  }\n}\n\nexport default UploadImages;\n","import * as React from \"react\";\nimport { Modal } from \"antd\";\nimport http from \"../common/http\";\nimport ImageContent from \"./ImageContent/ImageContent\";\nimport UploadImages from \"./UploadImages\";\n\nexport interface IHomePageState {\n  getImagesList?: () => void;\n  imageList: object[];\n  chooseImageUrl?: string;\n}\n\nexport interface IHomePageProps {\n  chooseImagesVisible: boolean;\n  chooseImagesConfirm: (url: any) => void;\n  chooseImagesCancel: () => void;\n}\n\nexport interface ChooseImage {\n  url?: string;\n}\n\nclass ChooseImagesModal extends React.Component<\n  IHomePageProps,\n  IHomePageState\n> {\n  constructor(props: IHomePageProps) {\n    super(props);\n    this.state = {\n      imageList: [],\n      chooseImageUrl: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getImagesList();\n  }\n\n  getImagesList = () => {\n    http.get(\"/test/getImagesList\").then(data => {\n      if (data.status === 0) {\n        this.setState({\n          imageList: data.list\n        });\n      }\n    });\n  };\n\n  chooseImage = (item: ChooseImage) => {\n    this.setState({\n      chooseImageUrl: item.url\n    });\n  };\n\n  chooseImagesCancel = () => {\n    this.setState({\n      chooseImageUrl: \"\"\n    });\n    this.props.chooseImagesCancel();\n  };\n\n  chooseImagesConfirm = () => {\n    this.setState({\n      chooseImageUrl: \"\"\n    });\n    this.props.chooseImagesConfirm(this.state.chooseImageUrl);\n  };\n\n  render() {\n    const { imageList } = this.state;\n\n    return (\n      <Modal\n        title=\"Basic Modal\"\n        visible={this.props.chooseImagesVisible}\n        onOk={this.chooseImagesConfirm}\n        onCancel={this.chooseImagesCancel}\n      >\n        {imageList.map((item, index) => (\n          <ImageContent\n            key={index}\n            data={item}\n            chooseImageUrl={this.state.chooseImageUrl}\n            chooseImage={() => {\n              this.chooseImage(item);\n            }}\n          />\n        ))}\n        <UploadImages getImagesList={this.getImagesList} />\n      </Modal>\n    );\n  }\n}\n\nexport default ChooseImagesModal;\n","import * as React from \"react\";\nimport {Col, Input, Modal, Row} from \"antd\";\nimport './EditModal.less'\nimport ChooseImagesModal from \"@/components/ChooseImagesModal\";\n\nexport interface IEditModalProps {\n  editModalVisible: boolean;\n  editModalConfirm: (name:string, url: string) => void;\n  editModalCancel: () => void;\n}\n\nexport interface IEditModalState {\n\n}\n\nclass EditModal extends React.Component<IEditModalProps, IEditModalState> {\n  state = {\n    chooseImagesVisible: false,\n    editName: \"\",\n    imageUrl: \"\"\n\n  }\n\n  editNameOnChange = (value: string) => {\n    this.setState({\n      editName: value\n    })\n  };\n\n  chooseImagesConfirm = (url: string) => {\n    this.setState({\n      imageUrl: url,\n      chooseImagesVisible: false\n    })\n  };\n\n  chooseImagesCancel = () => {\n    this.setState({\n      chooseImagesVisible: false\n    })\n  };\n\n  openChooseImagesModal = () => {\n    this.setState({\n      chooseImagesVisible: true\n    })\n  };\n\n  editModalConfirm = () => {\n    this.props.editModalConfirm(this.state.editName, this.state.imageUrl);\n    this.setState({\n      editName: \"\",\n      imageUrl: \"\"\n    });\n  };\n\n  editModalCancel = () => {\n    this.setState({\n      editName: \"\",\n      imageUrl: \"\"\n    });\n    this.props.editModalCancel();\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.props.editModalVisible}\n          onOk={this.editModalConfirm}\n          onCancel={this.editModalCancel}\n        >\n          <div className=\"edit-modal\">\n            <Row>\n              <Col span={6}>名称:</Col>\n              <Col span={6}>\n                <Input\n                  value={this.state.editName}\n                  onChange={(e) => this.editNameOnChange(e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col span={6}>图片:</Col>\n              <Col span={6}>\n                <div className=\"image-content\">\n                  {\n                    this.state.imageUrl === \"\" ?\n                      <div className=\"image-box\" onClick={this.openChooseImagesModal}>+</div>\n                      :\n                      <div className=\"image-box\">\n                        <img\n                          className=\"box-image\"\n                          src={this.state.imageUrl}\n                          onClick={this.openChooseImagesModal}/>\n                      </div>\n                  }\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Modal>\n\n        <ChooseImagesModal\n          chooseImagesVisible={this.state.chooseImagesVisible}\n          chooseImagesConfirm={url => this.chooseImagesConfirm(url)}\n          chooseImagesCancel={this.chooseImagesCancel}\n        />\n      </div>\n    )\n  }\n}\n\nexport default EditModal\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Input, Table, Modal, Row, Col } from \"antd\";\nimport { IStoreState, IGlobalStoreState } from \"../reducers/types\";\nimport * as actions from \"../actions/index\";\nimport ChooseImagesModal from \"../components/ChooseImagesModal\";\nimport EditModal from \"@/components/EditModal/EditModal\";\n\nconst confirm = Modal.confirm;\n\nexport interface IHomePageState {\n  number: number;\n  searchName: string;\n  visible: boolean;\n  editId: number;\n  changeName: string;\n  imageUrl: string;\n  chooseImagesVisible: boolean;\n  editModalVisible: boolean;\n}\n\nexport interface IHomePageProps {\n  global: IGlobalStoreState;\n  addNumber: () => void;\n  reduceNumber: () => void;\n  addTask: (name:string, url:string) => void;\n  getTask: (searchNumber: string) => void;\n  deleteItem: (id: number) => void;\n  editItem: (id: number, name: string, image: string) => void;\n}\n\nclass HomeComponent extends React.Component<IHomePageProps, IHomePageState> {\n  constructor(props: IHomePageProps) {\n    super(props);\n    this.state = {\n      number: 0,\n      searchName: \"\",\n      visible: false,\n      editId: 0,\n      changeName: \"\",\n      imageUrl: \"\",\n      chooseImagesVisible: false,\n      editModalVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTask(\"\");\n  }\n\n  numberOnChange = (e: any) => {\n    this.setState({\n      number: e.target.value\n    });\n  };\n\n  searchNameOnChange = (e: any) => {\n    this.setState({\n      searchName: e.target.value\n    });\n  };\n\n  showDeleteConfirm = (id: number) => {\n    confirm({\n      title: \"Are you sure delete this task?\",\n      content: \"Some descriptions\",\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        this.props.deleteItem(id);\n      },\n      onCancel: () => {}\n    });\n  };\n\n  handleOk = () => {\n    this.props.editItem(\n      this.state.editId,\n      this.state.changeName,\n      this.state.imageUrl\n    );\n    this.handleCancel();\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      changeName: \"\"\n    });\n  };\n\n  showEditModal = (record: any) => {\n    this.setState({\n      visible: true,\n      editId: record.id,\n      changeName: record.task,\n      imageUrl: record.image\n    });\n  };\n\n  changeNameOnChange = (e: any) => {\n    this.setState({\n      changeName: e.target.value\n    });\n  };\n\n  chooseImagesConfirm = (url: string) => {\n    this.props.editItem(this.state.editId, this.state.changeName, url);\n    this.setState({\n      chooseImagesVisible: false\n    });\n  };\n\n  chooseImagesCancel = () => {\n    this.setState({\n      chooseImagesVisible: false\n    });\n  };\n\n  openUploadModal = (record: any) => {\n    this.setState({\n      editId: record.id,\n      changeName: record.task,\n      imageUrl: record.image,\n      chooseImagesVisible: true\n    });\n  };\n\n  editModalConfirm = (name: string, url: string) => {\n    this.props.addTask(name, url);\n    this.setState({\n      editModalVisible: false\n    })\n  };\n\n  editModalCancel = () => {\n    this.setState({\n      editModalVisible: false\n    })\n  };\n\n  openEditModal = () => {\n    this.setState({\n      editModalVisible: true\n    })\n  };\n\n  render() {\n    const { global } = this.props;\n\n    const columns = [\n      {\n        title: \"id\",\n        dataIndex: \"id\",\n        key: \"id\"\n      },\n      {\n        title: \"名称\",\n        dataIndex: \"task\",\n        key: \"task\"\n      },\n      {\n        title: \"图片\",\n        render: (text: object, record: any) => (\n          <div className=\"image-operation\">\n            <img className=\"image-preview\" src={record.image} />\n          </div>\n        )\n      },\n      {\n        title: \"操作\",\n        render: (text: object, record: any) => (\n          <div className=\"config-operation\">\n            <span onClick={() => this.showEditModal(record)}>编辑</span>\n            <span onClick={() => this.openUploadModal(record)}>选择图片</span>\n            <span onClick={() => this.showDeleteConfirm(record.id)}>删除</span>\n          </div>\n        )\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          {global.amount}\n        </div>\n        <Button onClick={this.props.addNumber}>add number</Button>\n        <Button onClick={this.props.reduceNumber}>reduce number</Button>\n\n        <Input\n          style={{ width: \"200px\" }}\n          value={this.state.number}\n          onChange={this.numberOnChange}\n        />\n        <Button onClick={() => this.openEditModal()}>增加</Button>\n\n        <div>\n          <Input\n            style={{ width: \"200px\" }}\n            value={this.state.searchName}\n            onChange={this.searchNameOnChange}\n          />\n          <Button onClick={() => this.props.getTask(this.state.searchName)}>\n            查询\n          </Button>\n        </div>\n\n        <Table rowKey=\"id\" dataSource={global.data} columns={columns} />\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Row>\n            <Col span={6}>名称:</Col>\n            <Col span={6}>\n              <Input\n                value={this.state.changeName}\n                onChange={this.changeNameOnChange}\n              />\n            </Col>\n          </Row>\n        </Modal>\n\n        <ChooseImagesModal\n          chooseImagesVisible={this.state.chooseImagesVisible}\n          chooseImagesConfirm={url => this.chooseImagesConfirm(url)}\n          chooseImagesCancel={this.chooseImagesCancel}\n        />\n\n        <EditModal\n          editModalVisible={this.state.editModalVisible}\n          editModalConfirm={(name:string, url:string) => this.editModalConfirm(name, url)}\n          editModalCancel={this.editModalCancel}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IStoreState) => {\n  const { global } = state;\n  return {\n    global\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(HomeComponent);\n","import * as React from \"react\";\nimport { Input, Button } from \"antd\";\nimport http from \"@/common/http.js\";\nimport PropTypes from \"prop-types\";\nimport { setCookie } from \"../../common/cookies\";\n\nexport interface IHomePageState {\n  loginUserName: string;\n  loginPassword: string;\n}\n\nexport interface IHomePageProps {\n  history: any;\n}\n\nclass LoginComponent extends React.Component<IHomePageProps, IHomePageState> {\n  constructor(props: IHomePageProps) {\n    super(props);\n    this.state = {\n      loginUserName: \"\",\n      loginPassword: \"\"\n    };\n  }\n\n  public loginUserNameOnChange = (e: any) => {\n    this.setState({\n      loginUserName: e.target.value\n    });\n  };\n\n  public loginPasswordOnChange = (e: any) => {\n    this.setState({\n      loginPassword: e.target.value\n    });\n  };\n\n  public login = () => {\n    let param = {\n      username: this.state.loginUserName,\n      password: this.state.loginPassword\n    };\n\n    http.loginPost(\"/test/login\", param).then(data => {\n      if (data.status === 0) {\n        const { history } = this.props;\n        setCookie(\"TOKEN\", data.token);\n        history.push(\"/\");\n      }\n    });\n  };\n\n  public toRegister = () => {\n    const { history } = this.props;\n    history.push(\"/register\");\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  };\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <div>登录:</div>\n        <div className=\"login-item\">\n          <div className=\"item-name\">用户名</div>\n          <Input\n            className=\"item-value\"\n            placeholder=\"user name\"\n            value={this.state.loginUserName}\n            onChange={this.loginUserNameOnChange}\n          />\n        </div>\n        <div className=\"login-item\">\n          <div className=\"item-name\">密码</div>\n          <Input\n            className=\"item-value\"\n            placeholder=\"password\"\n            value={this.state.loginPassword}\n            onChange={this.loginPasswordOnChange}\n          />\n        </div>\n        <Button type=\"primary\" onClick={this.login}>\n          登录\n        </Button>\n        <a style={{ marginLeft: \"10px\" }} onClick={this.toRegister}>\n          没有账号?注册\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default LoginComponent;\n","import * as React from \"react\";\nimport { Input, Button, message } from \"antd\";\nimport http from \"@/common/http.js\";\nimport PropTypes from \"prop-types\";\n\nexport interface IHomePageState {\n  userName: string;\n  password: string;\n}\n\nexport interface IHomePageProps {\n  history: any;\n}\n\nclass LoginComponent extends React.Component<IHomePageProps, IHomePageState> {\n  constructor(props: IHomePageProps) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  public userNameOnChange = (e: any) => {\n    this.setState({\n      userName: e.target.value\n    });\n  };\n\n  public passwordOnChange = (e: any) => {\n    this.setState({\n      password: e.target.value\n    });\n  };\n\n  public register = () => {\n    let param = {\n      username: this.state.userName,\n      password: this.state.password\n    };\n\n    http.post(\"/test/register\", param).then(data => {\n      message.success(\"注册成功\");\n      this.setState({\n        userName: \"\",\n        password: \"\"\n      });\n    });\n  };\n\n  public toLogin = () => {\n    const { history } = this.props;\n    history.push(\"/login\");\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  };\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <div>注册:</div>\n        <div className=\"login-item\">\n          <div className=\"item-name\">用户名</div>\n          <Input\n            className=\"item-value\"\n            placeholder=\"user name\"\n            value={this.state.userName}\n            onChange={this.userNameOnChange}\n          />\n        </div>\n        <div className=\"login-item\">\n          <div className=\"item-name\">密码</div>\n          <Input\n            className=\"item-value\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={this.passwordOnChange}\n          />\n        </div>\n        <Button type=\"primary\" onClick={this.register}>\n          注册\n        </Button>\n        <a style={{ marginLeft: \"10px\" }} onClick={this.toLogin}>\n          已有账号?登录\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default LoginComponent;\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Register/Register\";\nimport { getCookie } from \"./common/cookies\";\n\nimport \"./App.less\";\n\nexport interface IHomePageState {}\n\nexport interface IHomePageProps {}\n\nclass AppComponent extends React.Component<IHomePageProps, IHomePageState> {\n  requireAuth = (Layout: any, props: any) => {\n    if (!getCookie(\"TOKEN\")) {\n      return <Redirect to=\"/login\" />;\n    } else return <Layout {...props} />;\n  };\n\n  componentDidMount() {}\n\n  public render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={(props: any) => this.requireAuth(Main, props)}\n          />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppComponent;\n","import { IAction, IGlobalStoreState } from \"./types\";\nimport { ADD_NUMBER, REDUCE_NUMBER, GET_TASL } from \"../constants\";\n\nconst initState: IGlobalStoreState = {\n  amount: 0,\n  data: []\n};\n\nexport function globalReducers(\n  state = initState,\n  action: IAction\n): IGlobalStoreState {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_NUMBER:\n      return { ...state, amount: state.amount + 1 };\n    case REDUCE_NUMBER:\n      return { ...state, amount: state.amount - 1 };\n    case GET_TASL:\n      return { ...state, data: payload };\n    default:\n      return { ...state };\n  }\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { globalReducers } from \"../reducers/index\";\n\nconst composeEnhancers =\n  ((window as any) && (window as any).REDUX_DEVTOOLS_EXTENSION_COMPOSE) ||\n  compose;\nconst reducer = combineReducers({\n  global: globalReducers\n});\n\nexport const configureStore = () =>\n  createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store/index\";\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}